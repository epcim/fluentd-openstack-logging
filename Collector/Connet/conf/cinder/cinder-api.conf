<source>
    type tail
    path /var/log/cinder/cinder-api.log
    pos_file /tmp/cinder--cinder-api.log.pos
    format /((?<timestamp>(\S*\s+\S*))\s+(?<pid>(\d*))\s+(?<loglevel>(\S*))\s+(?<api>(\S*))\s\[(?<requestID>([^\s]*))\s+(?<userID>([^\s]*))\s+(?<tenantID>([^\s]*))\s+(?<reserved1>([^\s]*))\s+(?<reserved2>([^\s]*))\s+(?<reserved3>([^]]*))\]\s+(?<method>(GET|PUT|POST|DELETE))\s+(?<request>(.*)))|((?<timestamp>(\S*\s+\S*))\s+(?<pid>(\d*))\s+(?<loglevel>(\S*))\s+(?<api>(\S*))\s\[-\]\s+(?<message>(.*)))|((?<timestamp>(\S*\s+\S*))\s+(?<pid>(\d*))\s+(?<loglevel>(\S*))\s+(?<api>(\S*))\s\[(?<requestID>([^\s]*))\s+(?<userID>([^\s]*))\s+(?<tenantID>([^\s]*))\s+(?<reserved1>([^\s]*))\s+(?<reserved2>([^\s]*))\s+(?<reserved3>([^]]*))\]\s+(?<message>(.*)))/
    tag cinder.api
    log_level warn
</source>

<filter cinder.api>
    type record_transformer
    enable_ruby
   <record>
        host ${hostname}
        subcomponent ${tag_parts[1]}
        timestamp ${timestamp.gsub!(" ", "T");timestamp.gsub(/\.\d*/, "+05:30")}
   </record>
</filter>

<match cinder.api>
    type retag
    add_prefix output.connet
</match>

<match>
    type null
</match>
