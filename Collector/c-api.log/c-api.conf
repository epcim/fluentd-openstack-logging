# TIMESTAMP {date time} LEVEL  API   [] MESSAGE

<source>
    type tail
    path /opt/stack/logs/c-api.log
    format grok
    grok_pattern %{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{NOTSPACE:api}%{SPACE}\[(?:%{DATA:request})\]%{SPACE}%{GREEDYDATA:message}
#    grok_pattern %{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{NOTSPACE:api}%{SPACE}\[(?:%{DATA:request})\]%{SPACE}%{GREEDYDATA:message}
#    grok_pattern (?<timestamp>(?>\d\d){1,2}-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])[T ](?:2[0123]|[01]?[0-9]):?(?:[0-5][0-9])(?::?(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))?(?:Z|[+-](?:2[0123]|[01]?[0-9])(?::?(?:[0-5][0-9])))?)\s*(?<loglevel>([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?))\s*(?<api>\S+)\s*\[(?:(?<request>.*?))\]\s*(?<message>.*)
    tag cinder.api
</source>

<filter cinder.api>
    type record_transformer
    enable_ruby
    <record>
        host ${hostname}
        # timestamp %{timestamp}
        # level ${loglevel}
        # api ${api}
        # request ${request}
        # message ${message}
    </record>
</filter>

# <match cinder.**>
#     type color_stripper
#     strip_fields # timestamp, loglevel, api, request, message
#     tag output.api 
# </match>

<match **.**>
    type stdout
</match> 

# <match **.**>
#     type forward
#     # send_timeout 60s
#     # recover_wait 10s
#     # heartbeat_interval 1s
#     # phi_threshold 16
#     # hard_timeout  60s

#     <server>
#         name aggregator
#         host 10.0.0.12
#         port 24220
#         weight 60
#     </server>
# </match>